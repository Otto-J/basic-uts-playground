<template>
	<scroll-view style="flex: 1;">
		<!-- 实际开发中，长列表应该使用list-view -->
		<button @click="refresh">主动刷新</button>
		<view class="uni-padding-wrap uni-common-mt">
			<text class="text" v-for="(num,index) in data2" :key="index">list - {{num}}</text>
			<view v-if="showLoadMore">{{loadMoreText}}</view>
		</view>
	</scroll-view>
</template>
<script lang="uts">
	export default {
		data() {
			return {
				data2: [] as Array<number>,
				loadMoreText: "加载中...",
				showLoadMore: false,
				max: 0
			}
		},
		onLoad() {
			console.log('onLoad')
			this.initData();
		},
		onShow() {
			console.log('onShow')
		},
		onReady() {
			console.log('onReady')
		},

		onReachBottom() {
			console.log("onReachBottom");
			if (this.max > 40) {
				this.loadMoreText = "没有更多数据了!"
				return;
			}
			this.showLoadMore = true;
			setTimeout(() => {
				this.setListData();
			}, 400);
		},
		onPullDownRefresh() {
			console.log('onPullDownRefresh');
			this.initData();
		},
		methods: {
			refresh() {
				console.log('主动刷新')
				uni.startPullDownRefresh()
				setTimeout(() => {
					console.log('主动刷新结束')
					uni.stopPullDownRefresh()
				}, 4000)
			},
			initData() {
				setTimeout(() => {
					this.max = 0;
					this.data2 = [];
					let data : Array<number> = [];
					this.max += 20;
					for (let i : number = this.max - 19; i < this.max + 1; i++) {
						data.push(i)
					}
					this.data2 = this.data2.concat(data);
					uni.stopPullDownRefresh();
				}, 500);
			},
			setListData() {
				let data : Array<number> = [];
				this.max += 10;
				for (let i : number = this.max - 9; i < this.max + 1; i++) {
					data.push(i)
				}
				this.data2 = this.data2.concat(data);
			}
		}
	}
</script>

<style>
	.text {
		margin: 6px 0;
		width: 100%;
		background-color: #fff;
		height: 52px;
		line-height: 52px;
		text-align: center;
		color: #555;
		border-radius: 4px;
	}
</style>